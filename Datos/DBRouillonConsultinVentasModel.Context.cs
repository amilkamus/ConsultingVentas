//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBRouillonConsultinVentasEntities : DbContext
    {
        public DBRouillonConsultinVentasEntities()
            : base("name=DBRouillonConsultinVentasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Caja> Caja { get; set; }
        public virtual DbSet<CambioMoneda> CambioMoneda { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<CO_Comprobante> CO_Comprobante { get; set; }
        public virtual DbSet<CO_ComprobanteDetalle> CO_ComprobanteDetalle { get; set; }
        public virtual DbSet<CO_Egreso> CO_Egreso { get; set; }
        public virtual DbSet<CO_Moneda> CO_Moneda { get; set; }
        public virtual DbSet<CO_TipoComprobante> CO_TipoComprobante { get; set; }
        public virtual DbSet<Compania> Compania { get; set; }
        public virtual DbSet<CorrelativoMast> CorrelativoMast { get; set; }
        public virtual DbSet<IGVMast> IGVMast { get; set; }
        public virtual DbSet<PersonaMast> PersonaMast { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<TipoPersona> TipoPersona { get; set; }
        public virtual DbSet<WH_Inventario> WH_Inventario { get; set; }
        public virtual DbSet<WH_InventarioDetalle> WH_InventarioDetalle { get; set; }
        public virtual DbSet<WH_ProductoServicio> WH_ProductoServicio { get; set; }
        public virtual DbSet<WH_TipoProductoServicio> WH_TipoProductoServicio { get; set; }
    
        public virtual ObjectResult<Nullable<double>> sp_ReporteCambioMoneda(Nullable<int> idMoneda)
        {
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("idMoneda", idMoneda) :
                new ObjectParameter("idMoneda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("sp_ReporteCambioMoneda", idMonedaParameter);
        }
    
        public virtual ObjectResult<sp_ReporteComprobante_Result> sp_ReporteComprobante(Nullable<int> idComprobante)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("idComprobante", idComprobante) :
                new ObjectParameter("idComprobante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReporteComprobante_Result>("sp_ReporteComprobante", idComprobanteParameter);
        }
    }
}
